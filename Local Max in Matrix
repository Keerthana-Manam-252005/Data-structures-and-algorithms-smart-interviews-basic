Local Max in Matrix:

Given an integer matrix C with dimensions N × N. Construct a new integer matrix D of size (N - 2) × (N - 2) such that each element D[i][j] represents the maximum value within a 3 × 3 submatrix of C, where the center of the submatrix is located at row i + 1 and column j + 1 in matrix C. We aim to identify the highest value within every continuous 3 × 3 submatrix within C. Print the resulting matrix D.

Input Format
The first line of input contains an integer N. For the next N lines, each line contains N elements separated by space.

Output Format
Print the generated matrix.

Constraints
3 ≤ N ≤ 100
-1000 ≤ Cij ≤ 1000

Example
Input
4
12 9 8 40
5 20 2 6
8 14 6 30
6 2 25 2

Output
20 40
25 30

code:
n = int(input())
c = [list(map(int,input().split())) for _ in range(n)]
d = []
for i in range(n-2):
    row = []
    for j in range(n-2):
        max_val = max(
            c[i][j], c[i][j+1], c[i][j+2], 
            c[i+1][j], c[i+1][j+1], c[i+1][j+2], 
            c[i+2][j], c[i+2][j+1], c[i+2][j+2])
        row.append(max_val)
    d.append(row)
for i in d:
    print(*i)
